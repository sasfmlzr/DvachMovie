// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: "${rootProject.projectDir.path}${File.separatorChar}gradle${File.separatorChar}detekt${File.separatorChar}detekt.gradle"

buildscript {
    ext {
        compileSdkVersion = 30
        minSdkVersion = 23
        targetSdkVersion = 30

        appcompatVersion = '1.2.0'
        constraintLayoutVersion = '2.0.4'
        coroutinesVersion = '1.5.1'
        daggerVersion = '2.38.1'
        detektVersion = '1.12.0-RC1'     ///////
        espressoVersion = '3.3.0'
        exoplayerVersion = '2.15.0'
        glideVersion = '4.12.0'
        junitVersion = '4.13.2'
        junitExtentionVersion = '1.1.2'
        jodaTimeVersion = '2.10.8'
        kotlinVersion = '1.5.30'
        ktxVersion = '1.6.0-alpha02'
        lifecycleVersion = '2.3.1'
        materialVersion = '1.4.0-alpha02'
        mockitoVersion = '3.1.0'
        navigationVersion = '2.3.5'
        okhttpVersion = '4.10.0-RC1'
        retrofitVersion = '2.9.0'
        robolectricVersion = '4.5.1'
        roomVersion = '2.4.0-alpha01'
        timberVersion = '4.7.1'
        testRunnerVersion = '1.3.0'
        uiautomatorVersion = '2.2.0'
        workVersion = '2.5.0'

        appcompat = "androidx.appcompat:appcompat:$appcompatVersion"
        constraintLayout = "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
        coroutines = [
                core   : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion",
                android: "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
        ]
        dagger = [
                compiler: "com.google.dagger:dagger-compiler:$daggerVersion",
                dagger  : "com.google.dagger:dagger:$daggerVersion"
        ]
        exoplayer = [
                core: "com.google.android.exoplayer:exoplayer-core:$exoplayerVersion",
                ui  : "com.google.android.exoplayer:exoplayer-ui:$exoplayerVersion"
        ]
        glide = [
                glide   : "com.github.bumptech.glide:glide:$glideVersion",
                compiler: "com.github.bumptech.glide:compiler:$glideVersion"
        ]
        jodaTime = "joda-time:joda-time:$jodaTimeVersion"
        kotlinSdk = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
        ktx = "androidx.core:core-ktx:$ktxVersion"
        lifecycle = [
                compiler  : "androidx.lifecycle:lifecycle-compiler:$lifecycleVersion"
        ]
        material = "com.google.android.material:material:$materialVersion"
        navigation = [
                fragment: "androidx.navigation:navigation-fragment-ktx:$navigationVersion",
                ui      : "androidx.navigation:navigation-ui-ktx:$navigationVersion"
        ]
        okhttp = "com.squareup.okhttp3:okhttp:$okhttpVersion"
        retrofit = [
                retrofit     : "com.squareup.retrofit2:retrofit:$retrofitVersion",
                gsonConverter: "com.squareup.retrofit2:converter-gson:$retrofitVersion"
        ]
        room = [
                room    : "androidx.room:room-ktx:$roomVersion",
                compiler: "androidx.room:room-compiler:$roomVersion"
        ]
        testing = [
                espresso      : "androidx.test.espresso:espresso-core:$espressoVersion",
                junit         : "junit:junit:$junitVersion",
                junitExtension: "androidx.test.ext:junit:$junitExtentionVersion",
                mockito       : "org.mockito:mockito-core:$mockitoVersion",
                robolectric   : "org.robolectric:robolectric:$robolectricVersion",
                runner        : "androidx.test:runner:$testRunnerVersion",
                uiautomator   : "androidx.test.uiautomator:uiautomator:$uiautomatorVersion",
                workmanager   : "androidx.work:work-testing:$workVersion",
                coroutines    : "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
        ]
        timber = "com.jakewharton.timber:timber:$timberVersion"
        workmanager = "androidx.work:work-runtime-ktx:$workVersion"
    }
    repositories {
        google()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$navigationVersion"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detektVersion"
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
